name: Build and Deploy trackwise Backend + MySQL Docker Image to EC2 via ECR

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and tag Docker image
        id: docker_build
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPO_NAME: ${{ secrets.ECR_REPO_NAME }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t trackwise-app-mysql:${IMAGE_TAG} .
          docker tag trackwise-app-mysql:${IMAGE_TAG} ${ECR_REGISTRY}/${ECR_REPO_NAME}:${IMAGE_TAG}
          echo "IMAGE_URI=${ECR_REGISTRY}/${ECR_REPO_NAME}:${IMAGE_TAG}" >> $GITHUB_ENV

      - name: Push image to ECR
        run: |
          docker push ${{ env.IMAGE_URI }}

      - name: Deploy to EC2 via SSM
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          EC2_INSTANCE_ID: ${{ secrets.EC2_INSTANCE_ID }}
          IMAGE_URI: ${{ env.IMAGE_URI }}
          APP_NAME: "trackwise-app"
        run: |
          # The commands to be run on the EC2 instance are passed as a single string.
          # This ensures that the shell state is maintained and sudo is used where necessary.
          DEPLOYMENT_SCRIPT='
            #!/bin/bash
            
            sudo yum update -y || true
            
            # Install Docker if not present
            if ! command -v docker &> /dev/null; then
              echo "Docker not found. Installing..."
              sudo amazon-linux-extras install docker -y
              sudo systemctl enable docker
              sudo systemctl start docker
            fi

            # Install AWS CLI if not present
            if ! command -v aws &> /dev/null; then
              echo "AWS CLI not found. Installing..."
              sudo yum install -y awscli
            fi
            
            # Log in and pull the image
            sudo aws ecr get-login-password --region "${AWS_REGION}" | sudo docker login --username AWS --password-stdin "${ECR_REGISTRY}"
            sudo docker pull "${IMAGE_URI}"
            
            # Stop, remove and run the new container
            sudo docker stop "${APP_NAME}" || true
            sudo docker rm "${APP_NAME}" || true
            sudo docker run -d --name "${APP_NAME}" -p 8080:8080 "${IMAGE_URI}"
            
            echo "Deployment complete."
          '
          
          # Send the entire script as a single command via SSM
          aws ssm send-command \
            --instance-ids "$EC2_INSTANCE_ID" \
            --document-name "AWS-RunShellScript" \
            --comment "Deploying a new Docker container" \
            --parameters "commands=$DEPLOYMENT_SCRIPT" \
            --region "$AWS_REGION"

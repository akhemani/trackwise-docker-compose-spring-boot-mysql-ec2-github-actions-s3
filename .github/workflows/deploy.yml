name: Build and Deploy trackwise Backend + MySQL Docker Image to EC2 via ECR

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and tag Docker image
      run: |
        docker build -t trackwise-app-mysql:1.0 .
        docker tag trackwise-app-mysql:1.0 ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPO_NAME }}:1.0

    - name: Push image to ECR
      run: |
        docker push ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:1.0

    - name: Deploy to EC2 via SSM
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}
        EC2_INSTANCE_ID: ${{ secrets.EC2_INSTANCE_ID }}
        ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      run: |
        IMAGE_URI="$ECR_REGISTRY/$ECR_REPOSITORY:1.0"

        aws ssm send-command \
          --instance-ids "$EC2_INSTANCE_ID" \
          --document-name "AWS-RunShellScript" \
          --comment "Install Docker if needed, pull image from ECR, run container" \
          --parameters 'commands=[
            "if ! command -v docker &> /dev/null; then",
            "  echo Installing Docker...",
            "  yum update -y",
            "  amazon-linux-extras install docker -y",
            "  systemctl enable docker",
            "  systemctl start docker",
            "  usermod -aG docker ec2-user",
            "else",
            "  echo Docker already installed.",
            "fi",
            "docker --version",
            "aws ecr get-login-password --region '$AWS_REGION' | docker login --username AWS --password-stdin '$ECR_REGISTRY'",
            "docker pull '$IMAGE_URI'",
            "docker stop trackwise-app || true",
            "docker rm trackwise-app || true",
            "docker run -d --name trackwise-app -p 8080:8080 '$IMAGE_URI'"
          ]' \
          --region "$AWS_REGION"
